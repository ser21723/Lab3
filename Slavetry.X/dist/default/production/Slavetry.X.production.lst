

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 23:10:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     000E                     	;# 
   229     000E                     	;# 
   230     000F                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0017                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     0081                     	;# 
   250     0085                     	;# 
   251     0086                     	;# 
   252     0087                     	;# 
   253     0088                     	;# 
   254     0089                     	;# 
   255     008C                     	;# 
   256     008D                     	;# 
   257     008E                     	;# 
   258     008F                     	;# 
   259     0090                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0094                     	;# 
   266     0095                     	;# 
   267     0096                     	;# 
   268     0097                     	;# 
   269     0098                     	;# 
   270     0099                     	;# 
   271     009A                     	;# 
   272     009B                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     0105                     	;# 
   278     0107                     	;# 
   279     0108                     	;# 
   280     0109                     	;# 
   281     010C                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     0185                     	;# 
   287     0187                     	;# 
   288     0188                     	;# 
   289     0189                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     000D                     	;# 
   306     000E                     	;# 
   307     000E                     	;# 
   308     000F                     	;# 
   309     0010                     	;# 
   310     0011                     	;# 
   311     0012                     	;# 
   312     0013                     	;# 
   313     0014                     	;# 
   314     0015                     	;# 
   315     0015                     	;# 
   316     0016                     	;# 
   317     0017                     	;# 
   318     0018                     	;# 
   319     0019                     	;# 
   320     001A                     	;# 
   321     001B                     	;# 
   322     001B                     	;# 
   323     001C                     	;# 
   324     001D                     	;# 
   325     001E                     	;# 
   326     001F                     	;# 
   327     0081                     	;# 
   328     0085                     	;# 
   329     0086                     	;# 
   330     0087                     	;# 
   331     0088                     	;# 
   332     0089                     	;# 
   333     008C                     	;# 
   334     008D                     	;# 
   335     008E                     	;# 
   336     008F                     	;# 
   337     0090                     	;# 
   338     0091                     	;# 
   339     0092                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0094                     	;# 
   344     0095                     	;# 
   345     0096                     	;# 
   346     0097                     	;# 
   347     0098                     	;# 
   348     0099                     	;# 
   349     009A                     	;# 
   350     009B                     	;# 
   351     009C                     	;# 
   352     009D                     	;# 
   353     009E                     	;# 
   354     009F                     	;# 
   355     0105                     	;# 
   356     0107                     	;# 
   357     0108                     	;# 
   358     0109                     	;# 
   359     010C                     	;# 
   360     010C                     	;# 
   361     010D                     	;# 
   362     010E                     	;# 
   363     010F                     	;# 
   364     0185                     	;# 
   365     0187                     	;# 
   366     0188                     	;# 
   367     0189                     	;# 
   368     018C                     	;# 
   369     018D                     	;# 
   370     001E                     _ADRESH	set	30
   371     001F                     _ADCON0bits	set	31
   372     001F                     _ADCON0	set	31
   373     0013                     _SSPBUF	set	19
   374     0014                     _SSPCON	set	20
   375     000C                     _PIR1bits	set	12
   376     000B                     _INTCONbits	set	11
   377     0006                     _PORTB	set	6
   378     0006                     _PORTBbits	set	6
   379     0063                     _SSPIF	set	99
   380     009F                     _ADCON1	set	159
   381     0094                     _SSPSTATbits	set	148
   382     0094                     _SSPSTAT	set	148
   383     0085                     _TRISAbits	set	133
   384     008C                     _PIE1bits	set	140
   385     0086                     _TRISB	set	134
   386     043B                     _TRISC3	set	1083
   387     043D                     _TRISC5	set	1085
   388     0189                     _ANSELH	set	393
   389     0188                     _ANSEL	set	392
   390                           
   391                           	psect	cinit
   392     000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395     000F                     __initialization:
   396                           
   397                           ; Clear objects allocated to COMMON
   398     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   401                           
   402                           ; Clear objects allocated to BANK0
   403     0012  1283               	bcf	3,5	;RP0=0, select bank0
   404     0013  1303               	bcf	3,6	;RP1=0, select bank0
   405     0014  01A0               	clrf	__pbssBANK0& (0+127)
   406     0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   407     0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   408     0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   409     0018                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412     0018                     __end_of__initialization:
   413     0018  0183               	clrf	3
   414     0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417     0078                     __pbssCOMMON:
   418     0078                     _temporal:
   419     0078                     	ds	1
   420     0079                     _dato_contador:
   421     0079                     	ds	1
   422     007A                     _dato_adc:
   423     007A                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426     0020                     __pbssBANK0:
   427     0020                     _a2:
   428     0020                     	ds	2
   429     0022                     _a:
   430     0022                     	ds	2
   431                           
   432                           	psect	cstackCOMMON
   433     0070                     __pcstackCOMMON:
   434     0070                     ?_spiRead:
   435     0070                     ??_spiRead:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_spiWrite:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ??_spiWrite:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_setup:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_ADC_Init:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_isr:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_spiReceiveWait:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ??_spiReceiveWait:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     spiWrite@dat:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 1 bytes @ 0x0
   467     0070                     	ds	1
   468     0071                     ??_isr:
   469                           
   470                           ; 1 bytes @ 0x1
   471     0071                     	ds	2
   472     0073                     ??_ADC_Init:
   473     0073                     ?_spiInit:	
   474                           ; 1 bytes @ 0x3
   475                           
   476     0073                     ?_ADC_Read:	
   477                           ; 1 bytes @ 0x3
   478                           
   479     0073                     spiInit@sDataSample:	
   480                           ; 2 bytes @ 0x3
   481                           
   482     0073                     ADC_Init@p_ang:	
   483                           ; 1 bytes @ 0x3
   484                           
   485                           
   486                           ; 1 bytes @ 0x3
   487     0073                     	ds	1
   488     0074                     spiInit@sClockIdle:
   489                           
   490                           ; 1 bytes @ 0x4
   491     0074                     	ds	1
   492     0075                     ??_ADC_Read:
   493     0075                     spiInit@sTransmitEdge:	
   494                           ; 1 bytes @ 0x5
   495                           
   496                           
   497                           ; 1 bytes @ 0x5
   498     0075                     	ds	1
   499     0076                     ??_spiInit:
   500     0076                     spiInit@sType:	
   501                           ; 1 bytes @ 0x6
   502                           
   503                           
   504                           ; 1 bytes @ 0x6
   505     0076                     	ds	1
   506     0077                     ??_setup:
   507     0077                     ADC_Read@ch:	
   508                           ; 1 bytes @ 0x7
   509                           
   510                           
   511                           ; 1 bytes @ 0x7
   512     0077                     	ds	1
   513                           
   514                           	psect	cstackBANK0
   515     0024                     __pcstackBANK0:
   516     0024                     ??_main:
   517                           
   518                           ; 1 bytes @ 0x0
   519     0024                     	ds	2
   520                           
   521                           	psect	maintext
   522     001C                     __pmaintext:	
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 70 in file "slave1.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : B00/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       2       0       0       0
   545 ;;      Totals:         0       2       0       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels required when called: 5
   548 ;; This function calls:
   549 ;;		_ADC_Init
   550 ;;		_ADC_Read
   551 ;;		_setup
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557     001C                     _main:	
   558                           ;psect for function _main
   559                           
   560     001C                     l923:	
   561                           ;incstack = 0
   562                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;slave1.c: 71:     setup();
   566     001C  120A  118A  20D9  120A  118A  	fcall	_setup
   567                           
   568                           ;slave1.c: 72:     ADC_Init(0b01000000);
   569     0021  3040               	movlw	64
   570     0022  120A  118A  2110  120A  118A  	fcall	_ADC_Init
   571     0027                     l58:	
   572                           ;slave1.c: 76:     while(1){
   573                           
   574                           
   575                           ;slave1.c: 77:         dato_adc = ADC_Read(0);
   576     0027  3000               	movlw	0
   577     0028  120A  118A  20B2  120A  118A  	fcall	_ADC_Read
   578     002D  0873               	movf	?_ADC_Read,w
   579     002E  00FA               	movwf	_dato_adc
   580     002F                     l925:
   581                           
   582                           ;slave1.c: 78:         _delay((unsigned long)((10)*(4000000/4000.0)));
   583     002F  300D               	movlw	13
   584     0030  1283               	bcf	3,5	;RP0=0, select bank0
   585     0031  1303               	bcf	3,6	;RP1=0, select bank0
   586     0032  00A5               	movwf	??_main+1
   587     0033  30FB               	movlw	251
   588     0034  00A4               	movwf	??_main
   589     0035                     u317:
   590     0035  0BA4               	decfsz	??_main,f
   591     0036  2835               	goto	u317
   592     0037  0BA5               	decfsz	??_main+1,f
   593     0038  2835               	goto	u317
   594     0039                     l927:
   595                           
   596                           ;slave1.c: 79:          if (PORTBbits.RB0 == 0)
   597     0039  1283               	bcf	3,5	;RP0=0, select bank0
   598     003A  1303               	bcf	3,6	;RP1=0, select bank0
   599     003B  1806               	btfsc	6,0	;volatile
   600     003C  283E               	goto	u251
   601     003D  283F               	goto	u250
   602     003E                     u251:
   603     003E  2843               	goto	l931
   604     003F                     u250:
   605     003F                     l929:
   606                           
   607                           ;slave1.c: 80:             {;slave1.c: 81:               a = 1;
   608     003F  3001               	movlw	1
   609     0040  00A2               	movwf	_a
   610     0041  3000               	movlw	0
   611     0042  00A3               	movwf	_a+1
   612     0043                     l931:
   613                           
   614                           ;slave1.c: 83:             if (PORTBbits.RB0 == 1 && a == 1) {
   615     0043  1C06               	btfss	6,0	;volatile
   616     0044  2846               	goto	u261
   617     0045  2847               	goto	u260
   618     0046                     u261:
   619     0046  285E               	goto	l941
   620     0047                     u260:
   621     0047                     l933:
   622     0047  0322               	decf	_a,w
   623     0048  0423               	iorwf	_a+1,w
   624     0049  1D03               	btfss	3,2
   625     004A  284C               	goto	u271
   626     004B  284D               	goto	u270
   627     004C                     u271:
   628     004C  285E               	goto	l941
   629     004D                     u270:
   630     004D                     l935:
   631                           
   632                           ;slave1.c: 84:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   633     004D  300D               	movlw	13
   634     004E  1283               	bcf	3,5	;RP0=0, select bank0
   635     004F  1303               	bcf	3,6	;RP1=0, select bank0
   636     0050  00A5               	movwf	??_main+1
   637     0051  30FB               	movlw	251
   638     0052  00A4               	movwf	??_main
   639     0053                     u327:
   640     0053  0BA4               	decfsz	??_main,f
   641     0054  2853               	goto	u327
   642     0055  0BA5               	decfsz	??_main+1,f
   643     0056  2853               	goto	u327
   644     0057                     l937:
   645                           
   646                           ;slave1.c: 85:                 dato_contador = dato_contador + 1;
   647     0057  0879               	movf	_dato_contador,w
   648     0058  3E01               	addlw	1
   649     0059  00F9               	movwf	_dato_contador
   650     005A                     l939:
   651                           
   652                           ;slave1.c: 86:                 a = 0;
   653     005A  1283               	bcf	3,5	;RP0=0, select bank0
   654     005B  1303               	bcf	3,6	;RP1=0, select bank0
   655     005C  01A2               	clrf	_a
   656     005D  01A3               	clrf	_a+1
   657     005E                     l941:
   658                           
   659                           ;slave1.c: 88:             if (PORTBbits.RB1 == 0)
   660     005E  1886               	btfsc	6,1	;volatile
   661     005F  2861               	goto	u281
   662     0060  2862               	goto	u280
   663     0061                     u281:
   664     0061  2866               	goto	l945
   665     0062                     u280:
   666     0062                     l943:
   667                           
   668                           ;slave1.c: 89:             {;slave1.c: 90:                a2 = 1;
   669     0062  3001               	movlw	1
   670     0063  00A0               	movwf	_a2
   671     0064  3000               	movlw	0
   672     0065  00A1               	movwf	_a2+1
   673     0066                     l945:
   674                           
   675                           ;slave1.c: 92:             if (PORTBbits.RB1 == 1 && a2 == 1)
   676     0066  1C86               	btfss	6,1	;volatile
   677     0067  2869               	goto	u291
   678     0068  286A               	goto	u290
   679     0069                     u291:
   680     0069  2827               	goto	l58
   681     006A                     u290:
   682     006A                     l947:
   683     006A  0320               	decf	_a2,w
   684     006B  0421               	iorwf	_a2+1,w
   685     006C  1D03               	btfss	3,2
   686     006D  286F               	goto	u301
   687     006E  2870               	goto	u300
   688     006F                     u301:
   689     006F  2827               	goto	l58
   690     0070                     u300:
   691     0070                     l949:
   692                           
   693                           ;slave1.c: 93:             {;slave1.c: 94:                 _delay((unsigned long)((10)*(
      +                          4000000/4000.0)));
   694     0070  300D               	movlw	13
   695     0071  1283               	bcf	3,5	;RP0=0, select bank0
   696     0072  1303               	bcf	3,6	;RP1=0, select bank0
   697     0073  00A5               	movwf	??_main+1
   698     0074  30FB               	movlw	251
   699     0075  00A4               	movwf	??_main
   700     0076                     u337:
   701     0076  0BA4               	decfsz	??_main,f
   702     0077  2876               	goto	u337
   703     0078  0BA5               	decfsz	??_main+1,f
   704     0079  2876               	goto	u337
   705     007A                     l951:
   706                           
   707                           ;slave1.c: 95:                 dato_contador = dato_contador - 1;
   708     007A  0879               	movf	_dato_contador,w
   709     007B  3EFF               	addlw	255
   710     007C  00F9               	movwf	_dato_contador
   711     007D                     l953:
   712                           
   713                           ;slave1.c: 96:                 a2 = 0;
   714     007D  1283               	bcf	3,5	;RP0=0, select bank0
   715     007E  1303               	bcf	3,6	;RP1=0, select bank0
   716     007F  01A0               	clrf	_a2
   717     0080  01A1               	clrf	_a2+1
   718     0081  2827               	goto	l58
   719     0082  120A  118A  280C   	ljmp	start
   720     0085                     __end_of_main:
   721                           
   722                           	psect	text1
   723     00D9                     __ptext1:	
   724 ;; *************** function _setup *****************
   725 ;; Defined at:
   726 ;;		line 105 in file "slave1.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 4
   747 ;; This function calls:
   748 ;;		_spiInit
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754     00D9                     _setup:	
   755                           ;psect for function _setup
   756                           
   757     00D9                     l843:	
   758                           ;incstack = 0
   759                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   760                           
   761                           
   762                           ;slave1.c: 107:     ANSEL = 0;
   763     00D9  1683               	bsf	3,5	;RP0=1, select bank3
   764     00DA  1703               	bsf	3,6	;RP1=1, select bank3
   765     00DB  0188               	clrf	8	;volatile
   766                           
   767                           ;slave1.c: 108:     ANSELH = 0;
   768     00DC  0189               	clrf	9	;volatile
   769     00DD                     l845:
   770                           
   771                           ;slave1.c: 110:     TRISB = 0b00000011;
   772     00DD  3003               	movlw	3
   773     00DE  1683               	bsf	3,5	;RP0=1, select bank1
   774     00DF  1303               	bcf	3,6	;RP1=0, select bank1
   775     00E0  0086               	movwf	6	;volatile
   776     00E1                     l847:
   777                           
   778                           ;slave1.c: 112:     PORTB = 0;
   779     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   780     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   781     00E3  0186               	clrf	6	;volatile
   782     00E4                     l849:
   783                           
   784                           ;slave1.c: 114:     dato_contador = 0;
   785     00E4  01F9               	clrf	_dato_contador
   786     00E5                     l851:
   787                           
   788                           ;slave1.c: 115:     a = 0;
   789     00E5  01A2               	clrf	_a
   790     00E6  01A3               	clrf	_a+1
   791     00E7                     l853:
   792                           
   793                           ;slave1.c: 116:     a2 = 0;
   794     00E7  01A0               	clrf	_a2
   795     00E8  01A1               	clrf	_a2+1
   796     00E9                     l855:
   797                           
   798                           ;slave1.c: 118:     INTCONbits.GIE = 1;
   799     00E9  178B               	bsf	11,7	;volatile
   800     00EA                     l857:
   801                           
   802                           ;slave1.c: 119:     INTCONbits.PEIE = 1;
   803     00EA  170B               	bsf	11,6	;volatile
   804     00EB                     l859:
   805                           
   806                           ;slave1.c: 120:     PIR1bits.SSPIF = 0;
   807     00EB  118C               	bcf	12,3	;volatile
   808     00EC                     l861:
   809                           
   810                           ;slave1.c: 121:     PIE1bits.SSPIE = 1;
   811     00EC  1683               	bsf	3,5	;RP0=1, select bank1
   812     00ED  1303               	bcf	3,6	;RP1=0, select bank1
   813     00EE  158C               	bsf	12,3	;volatile
   814     00EF                     l863:
   815                           
   816                           ;slave1.c: 122:     TRISAbits.TRISA5 = 1;
   817     00EF  1685               	bsf	5,5	;volatile
   818     00F0                     l865:
   819                           
   820                           ;slave1.c: 123:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   821     00F0  01F3               	clrf	spiInit@sDataSample
   822     00F1  01F4               	clrf	spiInit@sClockIdle
   823     00F2  01F5               	clrf	spiInit@sTransmitEdge
   824     00F3  3024               	movlw	36
   825     00F4  120A  118A  20FA  120A  118A  	fcall	_spiInit
   826     00F9                     l68:
   827     00F9  0008               	return
   828     00FA                     __end_of_setup:
   829                           
   830                           	psect	text2
   831     00FA                     __ptext2:	
   832 ;; *************** function _spiInit *****************
   833 ;; Defined at:
   834 ;;		line 12 in file "spi.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  sType           1    wreg     enum E1292
   837 ;;  sDataSample     1    3[COMMON] enum E1300
   838 ;;  sClockIdle      1    4[COMMON] enum E1304
   839 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  sType           1    6[COMMON] enum E1292
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         3       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         4       0       0       0       0
   855 ;;Total ram usage:        4 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; Hardware stack levels required when called: 3
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_setup
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865     00FA                     _spiInit:	
   866                           ;psect for function _spiInit
   867                           
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   871                           ;spiInit@sType stored from wreg
   872     00FA  00F6               	movwf	spiInit@sType
   873     00FB                     l833:
   874                           
   875                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   876     00FB  1683               	bsf	3,5	;RP0=1, select bank1
   877     00FC  1303               	bcf	3,6	;RP1=0, select bank1
   878     00FD  1287               	bcf	7,5	;volatile
   879                           
   880                           ;spi.c: 15:     if(sType & 0b00000100)
   881     00FE  1D76               	btfss	spiInit@sType,2
   882     00FF  2901               	goto	u151
   883     0100  2902               	goto	u150
   884     0101                     u151:
   885     0101  2906               	goto	l839
   886     0102                     u150:
   887     0102                     l835:
   888                           
   889                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   890     0102  0875               	movf	spiInit@sTransmitEdge,w
   891     0103  0094               	movwf	20	;volatile
   892     0104                     l837:
   893                           
   894                           ;spi.c: 18:         TRISC3 = 1;
   895     0104  1587               	bsf	7,3	;volatile
   896                           
   897                           ;spi.c: 19:     }
   898     0105  290A               	goto	l84
   899     0106                     l839:
   900                           
   901                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   902     0106  0873               	movf	spiInit@sDataSample,w
   903     0107  0475               	iorwf	spiInit@sTransmitEdge,w
   904     0108  0094               	movwf	20	;volatile
   905     0109                     l841:
   906                           
   907                           ;spi.c: 23:         TRISC3 = 0;
   908     0109  1187               	bcf	7,3	;volatile
   909     010A                     l84:	
   910                           ;spi.c: 24:     }
   911                           
   912                           
   913                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   914     010A  0876               	movf	spiInit@sType,w
   915     010B  0474               	iorwf	spiInit@sClockIdle,w
   916     010C  1283               	bcf	3,5	;RP0=0, select bank0
   917     010D  1303               	bcf	3,6	;RP1=0, select bank0
   918     010E  0094               	movwf	20	;volatile
   919     010F                     l85:
   920     010F  0008               	return
   921     0110                     __end_of_spiInit:
   922                           
   923                           	psect	text3
   924     00B2                     __ptext3:	
   925 ;; *************** function _ADC_Read *****************
   926 ;; Defined at:
   927 ;;		line 10 in file "ADC.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  ch              1    wreg     unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  ch              1    7[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  2    3[COMMON] unsigned int 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         2       0       0       0       0
   942 ;;      Locals:         1       0       0       0       0
   943 ;;      Temps:          2       0       0       0       0
   944 ;;      Totals:         5       0       0       0       0
   945 ;;Total ram usage:        5 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 3
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955     00B2                     _ADC_Read:	
   956                           ;psect for function _ADC_Read
   957                           
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   961                           ;ADC_Read@ch stored from wreg
   962     00B2  00F7               	movwf	ADC_Read@ch
   963     00B3                     l871:
   964                           
   965                           ;ADC.c: 10: unsigned int ADC_Read(unsigned char ch);ADC.c: 11: {;ADC.c: 12:     if(ch > 
      +                          13){
   966     00B3  300E               	movlw	14
   967     00B4  0277               	subwf	ADC_Read@ch,w
   968     00B5  1C03               	skipc
   969     00B6  28B8               	goto	u161
   970     00B7  28B9               	goto	u160
   971     00B8                     u161:
   972     00B8  28BC               	goto	l879
   973     00B9                     u160:
   974     00B9                     l873:
   975                           
   976                           ;ADC.c: 13:         return 0;
   977     00B9  01F3               	clrf	?_ADC_Read
   978     00BA  01F4               	clrf	?_ADC_Read+1
   979     00BB  28D8               	goto	l117
   980     00BC                     l879:
   981                           
   982                           ;ADC.c: 15:         ADCON0 = 0b01000000;
   983     00BC  3040               	movlw	64
   984     00BD  1283               	bcf	3,5	;RP0=0, select bank0
   985     00BE  1303               	bcf	3,6	;RP1=0, select bank0
   986     00BF  009F               	movwf	31	;volatile
   987     00C0                     l881:
   988                           
   989                           ;ADC.c: 16:         ADCON0 = (ch << 2);
   990     00C0  0877               	movf	ADC_Read@ch,w
   991     00C1  00F5               	movwf	??_ADC_Read
   992     00C2  3001               	movlw	1
   993     00C3                     u175:
   994     00C3  1003               	clrc
   995     00C4  0DF5               	rlf	??_ADC_Read,f
   996     00C5  3EFF               	addlw	-1
   997     00C6  1D03               	skipz
   998     00C7  28C3               	goto	u175
   999     00C8  1003               	clrc
  1000     00C9  0D75               	rlf	??_ADC_Read,w
  1001     00CA  009F               	movwf	31	;volatile
  1002     00CB                     l883:
  1003                           
  1004                           ;ADC.c: 17:         ADCON0bits.ADON = 1;
  1005     00CB  141F               	bsf	31,0	;volatile
  1006     00CC                     l885:
  1007                           
  1008                           ;ADC.c: 18:         ADCON0bits.GO_DONE = 1;
  1009     00CC  149F               	bsf	31,1	;volatile
  1010     00CD                     l119:	
  1011                           ;ADC.c: 19:         while(ADCON0bits.GO_DONE == 1);
  1012                           
  1013     00CD  189F               	btfsc	31,1	;volatile
  1014     00CE  28D0               	goto	u181
  1015     00CF  28D1               	goto	u180
  1016     00D0                     u181:
  1017     00D0  28CD               	goto	l119
  1018     00D1                     u180:
  1019     00D1                     l887:
  1020                           
  1021                           ;ADC.c: 20:         return ADRESH;
  1022     00D1  081E               	movf	30,w	;volatile
  1023     00D2  00F5               	movwf	??_ADC_Read
  1024     00D3  01F6               	clrf	??_ADC_Read+1
  1025     00D4  0875               	movf	??_ADC_Read,w
  1026     00D5  00F3               	movwf	?_ADC_Read
  1027     00D6  0876               	movf	??_ADC_Read+1,w
  1028     00D7  00F4               	movwf	?_ADC_Read+1
  1029     00D8                     l117:
  1030     00D8  0008               	return
  1031     00D9                     __end_of_ADC_Read:
  1032                           
  1033                           	psect	text4
  1034     0110                     __ptext4:	
  1035 ;; *************** function _ADC_Init *****************
  1036 ;; Defined at:
  1037 ;;		line 3 in file "ADC.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  p_ang           1    wreg     unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  p_ang           1    3[COMMON] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         1       0       0       0       0
  1055 ;;Total ram usage:        1 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 3
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     0110                     _ADC_Init:	
  1066                           ;psect for function _ADC_Init
  1067                           
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _ADC_Init: [wreg+status,2]
  1071                           ;ADC_Init@p_ang stored from wreg
  1072     0110  00F3               	movwf	ADC_Init@p_ang
  1073     0111                     l867:
  1074                           
  1075                           ;ADC.c: 3: void ADC_Init(unsigned char p_ang);ADC.c: 4: {;ADC.c: 5:     ADCON1 = 0x00;
  1076     0111  1683               	bsf	3,5	;RP0=1, select bank1
  1077     0112  1303               	bcf	3,6	;RP1=0, select bank1
  1078     0113  019F               	clrf	31	;volatile
  1079     0114                     l869:
  1080                           
  1081                           ;ADC.c: 6:     ADCON0 = p_ang;
  1082     0114  0873               	movf	ADC_Init@p_ang,w
  1083     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1084     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1085     0117  009F               	movwf	31	;volatile
  1086     0118                     l113:
  1087     0118  0008               	return
  1088     0119                     __end_of_ADC_Init:
  1089                           
  1090                           	psect	text5
  1091     0085                     __ptext5:	
  1092 ;; *************** function _isr *****************
  1093 ;; Defined at:
  1094 ;;		line 54 in file "slave1.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          2       0       0       0       0
  1111 ;;      Totals:         2       0       0       0       0
  1112 ;;Total ram usage:        2 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 2
  1115 ;; This function calls:
  1116 ;;		_spiRead
  1117 ;;		_spiWrite
  1118 ;; This function is called by:
  1119 ;;		Interrupt level 1
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123     0085                     _isr:	
  1124                           ;psect for function _isr
  1125                           
  1126     0085                     i1l781:
  1127                           
  1128                           ;slave1.c: 55:    if(SSPIF == 1){
  1129     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1131     0087  1D8C               	btfss	12,3	;volatile
  1132     0088  288A               	goto	u6_21
  1133     0089  288B               	goto	u6_20
  1134     008A                     u6_21:
  1135     008A  28AB               	goto	i1l53
  1136     008B                     u6_20:
  1137     008B                     i1l783:
  1138                           
  1139                           ;slave1.c: 56:         temporal = spiRead();
  1140     008B  120A  118A  2119  120A  118A  	fcall	_spiRead
  1141     0090  00F8               	movwf	_temporal
  1142     0091                     i1l785:
  1143                           
  1144                           ;slave1.c: 57:         if (temporal == 1)
  1145     0091  0378               	decf	_temporal,w
  1146     0092  1D03               	btfss	3,2
  1147     0093  2895               	goto	u7_21
  1148     0094  2896               	goto	u7_20
  1149     0095                     u7_21:
  1150     0095  289D               	goto	i1l789
  1151     0096                     u7_20:
  1152     0096                     i1l787:
  1153                           
  1154                           ;slave1.c: 58:         spiWrite(dato_adc);
  1155     0096  087A               	movf	_dato_adc,w
  1156     0097  120A  118A  2129  120A  118A  	fcall	_spiWrite
  1157     009C  28A8               	goto	i1l793
  1158     009D                     i1l789:
  1159     009D  0878               	movf	_temporal,w
  1160     009E  1D03               	btfss	3,2
  1161     009F  28A1               	goto	u8_21
  1162     00A0  28A2               	goto	u8_20
  1163     00A1                     u8_21:
  1164     00A1  28A8               	goto	i1l793
  1165     00A2                     u8_20:
  1166     00A2                     i1l791:
  1167                           
  1168                           ;slave1.c: 60:         spiWrite (dato_contador);
  1169     00A2  0879               	movf	_dato_contador,w
  1170     00A3  120A  118A  2129  120A  118A  	fcall	_spiWrite
  1171     00A8                     i1l793:
  1172                           
  1173                           ;slave1.c: 62:         SSPIF = 0;
  1174     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1175     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1176     00AA  118C               	bcf	12,3	;volatile
  1177     00AB                     i1l53:
  1178     00AB  0872               	movf	??_isr+1,w
  1179     00AC  008A               	movwf	10
  1180     00AD  0E71               	swapf	??_isr,w
  1181     00AE  0083               	movwf	3
  1182     00AF  0EFE               	swapf	btemp,f
  1183     00B0  0E7E               	swapf	btemp,w
  1184     00B1  0009               	retfie
  1185     00B2                     __end_of_isr:
  1186                           
  1187                           	psect	intentry
  1188     0004                     __pintentry:	
  1189                           ;incstack = 0
  1190                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1191                           
  1192     0004                     interrupt_function:
  1193     007E                     saved_w	set	btemp
  1194     0004  00FE               	movwf	btemp
  1195     0005  0E03               	swapf	3,w
  1196     0006  00F1               	movwf	??_isr
  1197     0007  080A               	movf	10,w
  1198     0008  00F2               	movwf	??_isr+1
  1199     0009  120A  118A  2885   	ljmp	_isr
  1200                           
  1201                           	psect	text6
  1202     0129                     __ptext6:	
  1203 ;; *************** function _spiWrite *****************
  1204 ;; Defined at:
  1205 ;;		line 34 in file "spi.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  dat             1    wreg     unsigned char 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  dat             1    0[COMMON] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         1       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         1       0       0       0       0
  1223 ;;Total ram usage:        1 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_isr
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232     0129                     _spiWrite:	
  1233                           ;psect for function _spiWrite
  1234                           
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _spiWrite: [wreg]
  1238                           ;spiWrite@dat stored from wreg
  1239     0129  00F0               	movwf	spiWrite@dat
  1240     012A                     i1l731:
  1241                           
  1242                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
  1243     012A  0870               	movf	spiWrite@dat,w
  1244     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1245     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1246     012D  0093               	movwf	19	;volatile
  1247     012E                     i1l94:
  1248     012E  0008               	return
  1249     012F                     __end_of_spiWrite:
  1250                           
  1251                           	psect	text7
  1252     0119                     __ptext7:	
  1253 ;; *************** function _spiRead *****************
  1254 ;; Defined at:
  1255 ;;		line 47 in file "spi.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 1
  1276 ;; This function calls:
  1277 ;;		_spiReceiveWait
  1278 ;; This function is called by:
  1279 ;;		_isr
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283     0119                     _spiRead:	
  1284                           ;psect for function _spiRead
  1285                           
  1286     0119                     i1l725:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1289                           
  1290                           
  1291                           ;spi.c: 49:     spiReceiveWait();
  1292     0119  120A  118A  2122  120A  118A  	fcall	_spiReceiveWait
  1293     011E                     i1l727:
  1294                           
  1295                           ;spi.c: 50:     return(SSPBUF);
  1296     011E  1283               	bcf	3,5	;RP0=0, select bank0
  1297     011F  1303               	bcf	3,6	;RP1=0, select bank0
  1298     0120  0813               	movf	19,w	;volatile
  1299     0121                     i1l102:
  1300     0121  0008               	return
  1301     0122                     __end_of_spiRead:
  1302                           
  1303                           	psect	text8
  1304     0122                     __ptext8:	
  1305 ;; *************** function _spiReceiveWait *****************
  1306 ;; Defined at:
  1307 ;;		line 29 in file "spi.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		None
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_spiRead
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     0122                     _spiReceiveWait:	
  1335                           ;psect for function _spiReceiveWait
  1336                           
  1337     0122                     i1l723:	
  1338                           ;incstack = 0
  1339                           ; Regs used in _spiReceiveWait: []
  1340                           
  1341     0122                     i1l88:	
  1342                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1343                           
  1344     0122  1683               	bsf	3,5	;RP0=1, select bank1
  1345     0123  1303               	bcf	3,6	;RP1=0, select bank1
  1346     0124  1C14               	btfss	20,0	;volatile
  1347     0125  2927               	goto	u2_21
  1348     0126  2928               	goto	u2_20
  1349     0127                     u2_21:
  1350     0127  2922               	goto	i1l88
  1351     0128                     u2_20:
  1352     0128                     i1l91:
  1353     0128  0008               	return
  1354     0129                     __end_of_spiReceiveWait:
  1355     007E                     btemp	set	126	;btemp
  1356     007E                     wtemp0	set	126
  1357                           
  1358                           	psect	idloc
  1359                           
  1360                           ;Config register IDLOC0 @ 0x2000
  1361                           ;	unspecified, using default values
  1362     2000                     	org	8192
  1363     2000  3FFF               	dw	16383
  1364                           
  1365                           ;Config register IDLOC1 @ 0x2001
  1366                           ;	unspecified, using default values
  1367     2001                     	org	8193
  1368     2001  3FFF               	dw	16383
  1369                           
  1370                           ;Config register IDLOC2 @ 0x2002
  1371                           ;	unspecified, using default values
  1372     2002                     	org	8194
  1373     2002  3FFF               	dw	16383
  1374                           
  1375                           ;Config register IDLOC3 @ 0x2003
  1376                           ;	unspecified, using default values
  1377     2003                     	org	8195
  1378     2003  3FFF               	dw	16383
  1379                           
  1380                           	psect	config
  1381                           
  1382                           ;Config register CONFIG1 @ 0x2007
  1383                           ;	Oscillator Selection bits
  1384                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1385                           ;	Watchdog Timer Enable bit
  1386                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1387                           ;	Power-up Timer Enable bit
  1388                           ;	PWRTE = OFF, PWRT disabled
  1389                           ;	RE3/MCLR pin function select bit
  1390                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1391                           ;	Code Protection bit
  1392                           ;	CP = OFF, Program memory code protection is disabled
  1393                           ;	Data Code Protection bit
  1394                           ;	CPD = OFF, Data memory code protection is disabled
  1395                           ;	Brown Out Reset Selection bits
  1396                           ;	BOREN = OFF, BOR disabled
  1397                           ;	Internal External Switchover bit
  1398                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1399                           ;	Fail-Safe Clock Monitor Enabled bit
  1400                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1401                           ;	Low Voltage Programming Enable bit
  1402                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1403                           ;	In-Circuit Debugger Mode bit
  1404                           ;	DEBUG = 0x1, unprogramme  1405     2007                     	org	8199
  1406     2007  20D4               	dw	8404
  1407                           
  1408                           ;Config register CONFIG2 @ 0x2008
  1409                           ;	Brown-out Reset Selection bit
  1410                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1411                           ;	Flash Program Memory Self Write Enable bits
  1412                           ;	WRT = OFF, Write protection off
  1413     2008                     	org	8200
  1414     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      2       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     426
                                              0 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 23:10:29 2023

                      _a 0022              _SSPSTATbits 0094                       l58 0027  
                     l84 010A                       l68 00F9                       l85 010F  
                     _a2 0020                      l113 0118                      l117 00D8  
                    l119 00CD                      l841 0109                      l833 00FB  
                    l835 0102                      l851 00E5                      l843 00D9  
                    l931 0043                      l923 001C                      l837 0104  
                    l861 00EC                      l853 00E7                      l845 00DD  
                    l933 0047                      l941 005E                      l925 002F  
                    l871 00B3                      l839 0106                      l863 00EF  
                    l855 00E9                      l847 00E1                      l951 007A  
                    l943 0062                      l935 004D                      l927 0039  
                    l881 00C0                      l873 00B9                      l865 00F0  
                    l857 00EA                      l849 00E4                      l953 007D  
                    l945 0066                      l937 0057                      l929 003F  
                    l867 0111                      l883 00CB                      l859 00EB  
                    l947 006A                      l939 005A                      l869 0114  
                    l885 00CC                      l949 0070                      l887 00D1  
                    l879 00BC                      u300 0070                      u301 006F  
                    u150 0102                      u151 0101                      u160 00B9  
                    u161 00B8                      u250 003F                      u251 003E  
                    u180 00D1                      u260 0047                      u181 00D0  
                    u261 0046                      u317 0035                      u270 004D  
                    u175 00C3                      u327 0053                      u271 004C  
                    u280 0062                      u337 0076                      u281 0061  
                    u290 006A                      u291 0069                      _isr 0085  
                   ?_isr 0070                     i1l53 00AB                     i1l91 0128  
                   i1l94 012E                     i1l88 0122                     u2_20 0128  
                   u2_21 0127                     u6_20 008B                     u6_21 008A  
                   u7_20 0096                     u7_21 0095                     u8_20 00A2  
                   u8_21 00A1                     _main 001C                     btemp 007E  
       __end_of_ADC_Init 0119         __end_of_ADC_Read 00D9                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l102 0121                    i1l723 0122                    i1l731 012A  
                  i1l725 0119                    i1l727 011E                    i1l781 0085  
                  i1l791 00A2                    i1l783 008B                    i1l793 00A8  
                  i1l785 0091                    i1l787 0096                    i1l789 009D  
                  _PORTB 0006                    _TRISB 0086                    _SSPIF 0063  
                  _setup 00D9                    pclath 000A          __end_of_spiInit 0110  
        __end_of_spiRead 0122                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0085                   ??_main 0024  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_Init 0070                ?_ADC_Read 0073                   saved_w 007E  
       __end_of_spiWrite 012F                ??_spiInit 0076                ??_spiRead 0070  
__end_of__initialization 0018           __pcstackCOMMON 0070            __end_of_setup 00FA  
             ??_ADC_Init 0073               ??_ADC_Read 0075                  ??_setup 0077  
             __pbssBANK0 0020               __pmaintext 001C               __pintentry 0004  
             ADC_Read@ch 0077                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00D9                  __ptext2 00FA                  __ptext3 00B2  
                __ptext4 0110                  __ptext5 0085                  __ptext6 0129  
                __ptext7 0119                  __ptext8 0122                  _spiInit 00FA  
                _spiRead 0119     end_of_initialization 0018               ??_spiWrite 0070  
              _PORTBbits 0006                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 0122      start_initialization 000F              __end_of_isr 00B2  
 __end_of_spiReceiveWait 0129              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0024            _dato_contador 0079          ?_spiReceiveWait 0070  
               _ADC_Init 0110                 _ADC_Read 00B2                 ?_spiInit 0073  
               ?_spiRead 0070     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F            ADC_Init@p_ang 0073                 _dato_adc 007A  
               _temporal 0078                 _spiWrite 0129             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
