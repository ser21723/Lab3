

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Feb 07 02:37:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000E                     	;# 
   307     000F                     	;# 
   308     0010                     	;# 
   309     0011                     	;# 
   310     0012                     	;# 
   311     0013                     	;# 
   312     0014                     	;# 
   313     0015                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001D                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     0081                     	;# 
   327     0085                     	;# 
   328     0086                     	;# 
   329     0087                     	;# 
   330     0088                     	;# 
   331     0089                     	;# 
   332     008C                     	;# 
   333     008D                     	;# 
   334     008E                     	;# 
   335     008F                     	;# 
   336     0090                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0095                     	;# 
   344     0096                     	;# 
   345     0097                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009A                     	;# 
   349     009B                     	;# 
   350     009C                     	;# 
   351     009D                     	;# 
   352     009E                     	;# 
   353     009F                     	;# 
   354     0105                     	;# 
   355     0107                     	;# 
   356     0108                     	;# 
   357     0109                     	;# 
   358     010C                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     0185                     	;# 
   364     0187                     	;# 
   365     0188                     	;# 
   366     0189                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     0013                     _SSPBUF	set	19
   370     0014                     _SSPCON	set	20
   371     001E                     _ADRESH	set	30
   372     001F                     _ADCON0bits	set	31
   373     001F                     _ADCON0	set	31
   374     000C                     _PIR1bits	set	12
   375     000B                     _INTCONbits	set	11
   376     0008                     _PORTD	set	8
   377     0006                     _PORTB	set	6
   378     0063                     _SSPIF	set	99
   379     0094                     _SSPSTATbits	set	148
   380     0094                     _SSPSTAT	set	148
   381     009F                     _ADCON1	set	159
   382     0085                     _TRISAbits	set	133
   383     008C                     _PIE1bits	set	140
   384     0088                     _TRISD	set	136
   385     0086                     _TRISB	set	134
   386     043B                     _TRISC3	set	1083
   387     043D                     _TRISC5	set	1085
   388     0189                     _ANSELH	set	393
   389     0188                     _ANSEL	set	392
   390                           
   391                           	psect	cinit
   392     000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395     000F                     __initialization:
   396                           
   397                           ; Clear objects allocated to COMMON
   398     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400     0011                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403     0011                     __end_of__initialization:
   404     0011  0183               	clrf	3
   405     0012  120A  118A  283C   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408     0078                     __pbssCOMMON:
   409     0078                     _temporal:
   410     0078                     	ds	1
   411     0079                     _dato_adc:
   412     0079                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415     0070                     __pcstackCOMMON:
   416     0070                     ?_spiRead:
   417     0070                     ??_spiRead:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ?_spiWrite:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ??_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_setup:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_ADC_Init:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_isr:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_spiReceiveWait:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ??_spiReceiveWait:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     spiWrite@dat:	
   445                           ; 1 bytes @ 0x0
   446                           
   447                           
   448                           ; 1 bytes @ 0x0
   449     0070                     	ds	1
   450     0071                     ??_isr:
   451                           
   452                           ; 1 bytes @ 0x1
   453     0071                     	ds	2
   454     0073                     ??_ADC_Init:
   455     0073                     ?_spiInit:	
   456                           ; 1 bytes @ 0x3
   457                           
   458     0073                     ?_ADC_Read:	
   459                           ; 1 bytes @ 0x3
   460                           
   461     0073                     ADC_Init@p_ang:	
   462                           ; 2 bytes @ 0x3
   463                           
   464     0073                     spiInit@sDataSample:	
   465                           ; 1 bytes @ 0x3
   466                           
   467                           
   468                           ; 1 bytes @ 0x3
   469     0073                     	ds	1
   470     0074                     spiInit@sClockIdle:
   471                           
   472                           ; 1 bytes @ 0x4
   473     0074                     	ds	1
   474     0075                     ??_ADC_Read:
   475     0075                     spiInit@sTransmitEdge:	
   476                           ; 1 bytes @ 0x5
   477                           
   478                           
   479                           ; 1 bytes @ 0x5
   480     0075                     	ds	1
   481     0076                     ??_spiInit:
   482     0076                     spiInit@sType:	
   483                           ; 1 bytes @ 0x6
   484                           
   485                           
   486                           ; 1 bytes @ 0x6
   487     0076                     	ds	1
   488     0077                     ??_setup:
   489     0077                     ADC_Read@ch:	
   490                           ; 1 bytes @ 0x7
   491                           
   492                           
   493                           ; 1 bytes @ 0x7
   494     0077                     	ds	1
   495                           
   496                           	psect	cstackBANK0
   497     0020                     __pcstackBANK0:
   498     0020                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x0
   501     0020                     	ds	2
   502                           
   503                           	psect	maintext
   504     003C                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 64 in file "slaver2.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       2       0       0       0
   527 ;;      Totals:         0       2       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels required when called: 5
   530 ;; This function calls:
   531 ;;		_ADC_Init
   532 ;;		_ADC_Read
   533 ;;		_setup
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539     003C                     _main:	
   540                           ;psect for function _main
   541                           
   542     003C                     l829:	
   543                           ;incstack = 0
   544                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   545                           
   546                           
   547                           ;slaver2.c: 65:     setup();
   548     003C  120A  118A  207E  120A  118A  	fcall	_setup
   549                           
   550                           ;slaver2.c: 66:     ADC_Init(0b01000000);
   551     0041  3040               	movlw	64
   552     0042  120A  118A  20B1  120A  118A  	fcall	_ADC_Init
   553     0047                     l52:	
   554                           ;slaver2.c: 70:     while(1){
   555                           
   556                           
   557                           ;slaver2.c: 71:         dato_adc = ADC_Read(0);
   558     0047  3000               	movlw	0
   559     0048  120A  118A  2015  120A  118A  	fcall	_ADC_Read
   560     004D  0873               	movf	?_ADC_Read,w
   561     004E  00F9               	movwf	_dato_adc
   562     004F                     l831:
   563                           
   564                           ;slaver2.c: 72:         _delay((unsigned long)((10)*(4000000/4000.0)));
   565     004F  300D               	movlw	13
   566     0050  1283               	bcf	3,5	;RP0=0, select bank0
   567     0051  1303               	bcf	3,6	;RP1=0, select bank0
   568     0052  00A1               	movwf	??_main+1
   569     0053  30FB               	movlw	251
   570     0054  00A0               	movwf	??_main
   571     0055                     u127:
   572     0055  0BA0               	decfsz	??_main,f
   573     0056  2855               	goto	u127
   574     0057  0BA1               	decfsz	??_main+1,f
   575     0058  2855               	goto	u127
   576     0059  2847               	goto	l52
   577     005A  120A  118A  280C   	ljmp	start
   578     005D                     __end_of_main:
   579                           
   580                           	psect	text1
   581     007E                     __ptext1:	
   582 ;; *************** function _setup *****************
   583 ;; Defined at:
   584 ;;		line 80 in file "slaver2.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 4
   605 ;; This function calls:
   606 ;;		_spiInit
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612     007E                     _setup:	
   613                           ;psect for function _setup
   614                           
   615     007E                     l791:	
   616                           ;incstack = 0
   617                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   618                           
   619                           
   620                           ;slaver2.c: 82:     ANSEL = 0;
   621     007E  1683               	bsf	3,5	;RP0=1, select bank3
   622     007F  1703               	bsf	3,6	;RP1=1, select bank3
   623     0080  0188               	clrf	8	;volatile
   624                           
   625                           ;slaver2.c: 83:     ANSELH = 0;
   626     0081  0189               	clrf	9	;volatile
   627                           
   628                           ;slaver2.c: 85:     TRISB = 0;
   629     0082  1683               	bsf	3,5	;RP0=1, select bank1
   630     0083  1303               	bcf	3,6	;RP1=0, select bank1
   631     0084  0186               	clrf	6	;volatile
   632                           
   633                           ;slaver2.c: 86:     TRISD = 0;
   634     0085  0188               	clrf	8	;volatile
   635                           
   636                           ;slaver2.c: 88:     PORTB = 0;
   637     0086  1283               	bcf	3,5	;RP0=0, select bank0
   638     0087  1303               	bcf	3,6	;RP1=0, select bank0
   639     0088  0186               	clrf	6	;volatile
   640                           
   641                           ;slaver2.c: 89:     PORTD = 0;
   642     0089  0188               	clrf	8	;volatile
   643     008A                     l793:
   644                           
   645                           ;slaver2.c: 92:     INTCONbits.GIE = 1;
   646     008A  178B               	bsf	11,7	;volatile
   647     008B                     l795:
   648                           
   649                           ;slaver2.c: 93:     INTCONbits.PEIE = 1;
   650     008B  170B               	bsf	11,6	;volatile
   651     008C                     l797:
   652                           
   653                           ;slaver2.c: 94:     PIR1bits.SSPIF = 0;
   654     008C  118C               	bcf	12,3	;volatile
   655     008D                     l799:
   656                           
   657                           ;slaver2.c: 95:     PIE1bits.SSPIE = 1;
   658     008D  1683               	bsf	3,5	;RP0=1, select bank1
   659     008E  1303               	bcf	3,6	;RP1=0, select bank1
   660     008F  158C               	bsf	12,3	;volatile
   661     0090                     l801:
   662                           
   663                           ;slaver2.c: 96:     TRISAbits.TRISA5 = 1;
   664     0090  1685               	bsf	5,5	;volatile
   665     0091                     l803:
   666                           
   667                           ;slaver2.c: 97:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   668     0091  01F3               	clrf	spiInit@sDataSample
   669     0092  01F4               	clrf	spiInit@sClockIdle
   670     0093  01F5               	clrf	spiInit@sTransmitEdge
   671     0094  3024               	movlw	36
   672     0095  120A  118A  209B  120A  118A  	fcall	_spiInit
   673     009A                     l58:
   674     009A  0008               	return
   675     009B                     __end_of_setup:
   676                           
   677                           	psect	text2
   678     009B                     __ptext2:	
   679 ;; *************** function _spiInit *****************
   680 ;; Defined at:
   681 ;;		line 12 in file "../Slavetry.X/spi.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  sType           1    wreg     enum E1292
   684 ;;  sDataSample     1    3[COMMON] enum E1300
   685 ;;  sClockIdle      1    4[COMMON] enum E1304
   686 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  sType           1    6[COMMON] enum E1292
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         3       0       0       0       0
   699 ;;      Locals:         1       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0
   701 ;;      Totals:         4       0       0       0       0
   702 ;;Total ram usage:        4 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 3
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_setup
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712     009B                     _spiInit:	
   713                           ;psect for function _spiInit
   714                           
   715                           
   716                           ;incstack = 0
   717                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   718                           ;spiInit@sType stored from wreg
   719     009B  00F6               	movwf	spiInit@sType
   720     009C                     l781:
   721                           
   722                           ;../Slavetry.X/spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_
      +                          Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../Slavetry.X/spi.c: 13: {;../Sl
      +                          avetry.X/spi.c: 14:     TRISC5 = 0;
   723     009C  1683               	bsf	3,5	;RP0=1, select bank1
   724     009D  1303               	bcf	3,6	;RP1=0, select bank1
   725     009E  1287               	bcf	7,5	;volatile
   726                           
   727                           ;../Slavetry.X/spi.c: 15:     if(sType & 0b00000100)
   728     009F  1D76               	btfss	spiInit@sType,2
   729     00A0  28A2               	goto	u81
   730     00A1  28A3               	goto	u80
   731     00A2                     u81:
   732     00A2  28A7               	goto	l787
   733     00A3                     u80:
   734     00A3                     l783:
   735                           
   736                           ;../Slavetry.X/spi.c: 16:     {;../Slavetry.X/spi.c: 17:         SSPSTAT = sTransmitEdge
      +                          ;
   737     00A3  0875               	movf	spiInit@sTransmitEdge,w
   738     00A4  0094               	movwf	20	;volatile
   739     00A5                     l785:
   740                           
   741                           ;../Slavetry.X/spi.c: 18:         TRISC3 = 1;
   742     00A5  1587               	bsf	7,3	;volatile
   743                           
   744                           ;../Slavetry.X/spi.c: 19:     }
   745     00A6  28AB               	goto	l93
   746     00A7                     l787:
   747                           
   748                           ;../Slavetry.X/spi.c: 21:     {;../Slavetry.X/spi.c: 22:         SSPSTAT = sDataSample |
      +                           sTransmitEdge;
   749     00A7  0873               	movf	spiInit@sDataSample,w
   750     00A8  0475               	iorwf	spiInit@sTransmitEdge,w
   751     00A9  0094               	movwf	20	;volatile
   752     00AA                     l789:
   753                           
   754                           ;../Slavetry.X/spi.c: 23:         TRISC3 = 0;
   755     00AA  1187               	bcf	7,3	;volatile
   756     00AB                     l93:	
   757                           ;../Slavetry.X/spi.c: 24:     }
   758                           
   759                           
   760                           ;../Slavetry.X/spi.c: 26:     SSPCON = sType | sClockIdle;
   761     00AB  0876               	movf	spiInit@sType,w
   762     00AC  0474               	iorwf	spiInit@sClockIdle,w
   763     00AD  1283               	bcf	3,5	;RP0=0, select bank0
   764     00AE  1303               	bcf	3,6	;RP1=0, select bank0
   765     00AF  0094               	movwf	20	;volatile
   766     00B0                     l94:
   767     00B0  0008               	return
   768     00B1                     __end_of_spiInit:
   769                           
   770                           	psect	text3
   771     0015                     __ptext3:	
   772 ;; *************** function _ADC_Read *****************
   773 ;; Defined at:
   774 ;;		line 10 in file "../Slavetry.X/ADC.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  ch              1    wreg     unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  ch              1    7[COMMON] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  2    3[COMMON] unsigned int 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         2       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0
   790 ;;      Temps:          2       0       0       0       0
   791 ;;      Totals:         5       0       0       0       0
   792 ;;Total ram usage:        5 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 3
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802     0015                     _ADC_Read:	
   803                           ;psect for function _ADC_Read
   804                           
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   808                           ;ADC_Read@ch stored from wreg
   809     0015  00F7               	movwf	ADC_Read@ch
   810     0016                     l805:
   811                           
   812                           ;../Slavetry.X/ADC.c: 10: unsigned int ADC_Read(unsigned char ch);../Slavetry.X/ADC.c: 1
      +                          1: {;../Slavetry.X/ADC.c: 12:     if(ch > 13){
   813     0016  300E               	movlw	14
   814     0017  0277               	subwf	ADC_Read@ch,w
   815     0018  1C03               	skipc
   816     0019  281B               	goto	u91
   817     001A  281C               	goto	u90
   818     001B                     u91:
   819     001B  281F               	goto	l813
   820     001C                     u90:
   821     001C                     l807:
   822                           
   823                           ;../Slavetry.X/ADC.c: 13:         return 0;
   824     001C  01F3               	clrf	?_ADC_Read
   825     001D  01F4               	clrf	?_ADC_Read+1
   826     001E  283B               	goto	l73
   827     001F                     l813:
   828                           
   829                           ;../Slavetry.X/ADC.c: 15:         ADCON0 = 0b01000000;
   830     001F  3040               	movlw	64
   831     0020  1283               	bcf	3,5	;RP0=0, select bank0
   832     0021  1303               	bcf	3,6	;RP1=0, select bank0
   833     0022  009F               	movwf	31	;volatile
   834     0023                     l815:
   835                           
   836                           ;../Slavetry.X/ADC.c: 16:         ADCON0 = (ch << 2);
   837     0023  0877               	movf	ADC_Read@ch,w
   838     0024  00F5               	movwf	??_ADC_Read
   839     0025  3001               	movlw	1
   840     0026                     u105:
   841     0026  1003               	clrc
   842     0027  0DF5               	rlf	??_ADC_Read,f
   843     0028  3EFF               	addlw	-1
   844     0029  1D03               	skipz
   845     002A  2826               	goto	u105
   846     002B  1003               	clrc
   847     002C  0D75               	rlf	??_ADC_Read,w
   848     002D  009F               	movwf	31	;volatile
   849     002E                     l817:
   850                           
   851                           ;../Slavetry.X/ADC.c: 17:         ADCON0bits.ADON = 1;
   852     002E  141F               	bsf	31,0	;volatile
   853     002F                     l819:
   854                           
   855                           ;../Slavetry.X/ADC.c: 18:         ADCON0bits.GO_DONE = 1;
   856     002F  149F               	bsf	31,1	;volatile
   857     0030                     l75:	
   858                           ;../Slavetry.X/ADC.c: 19:         while(ADCON0bits.GO_DONE == 1);
   859                           
   860     0030  189F               	btfsc	31,1	;volatile
   861     0031  2833               	goto	u111
   862     0032  2834               	goto	u110
   863     0033                     u111:
   864     0033  2830               	goto	l75
   865     0034                     u110:
   866     0034                     l821:
   867                           
   868                           ;../Slavetry.X/ADC.c: 20:         return ADRESH;
   869     0034  081E               	movf	30,w	;volatile
   870     0035  00F5               	movwf	??_ADC_Read
   871     0036  01F6               	clrf	??_ADC_Read+1
   872     0037  0875               	movf	??_ADC_Read,w
   873     0038  00F3               	movwf	?_ADC_Read
   874     0039  0876               	movf	??_ADC_Read+1,w
   875     003A  00F4               	movwf	?_ADC_Read+1
   876     003B                     l73:
   877     003B  0008               	return
   878     003C                     __end_of_ADC_Read:
   879                           
   880                           	psect	text4
   881     00B1                     __ptext4:	
   882 ;; *************** function _ADC_Init *****************
   883 ;; Defined at:
   884 ;;		line 3 in file "../Slavetry.X/ADC.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  p_ang           1    wreg     unsigned char 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  p_ang           1    3[COMMON] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         1       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         1       0       0       0       0
   902 ;;Total ram usage:        1 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 3
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912     00B1                     _ADC_Init:	
   913                           ;psect for function _ADC_Init
   914                           
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in _ADC_Init: [wreg+status,2]
   918                           ;ADC_Init@p_ang stored from wreg
   919     00B1  00F3               	movwf	ADC_Init@p_ang
   920     00B2                     l737:
   921                           
   922                           ;../Slavetry.X/ADC.c: 3: void ADC_Init(unsigned char p_ang);../Slavetry.X/ADC.c: 4: {;..
      +                          /Slavetry.X/ADC.c: 5:     ADCON1 = 0x00;
   923     00B2  1683               	bsf	3,5	;RP0=1, select bank1
   924     00B3  1303               	bcf	3,6	;RP1=0, select bank1
   925     00B4  019F               	clrf	31	;volatile
   926     00B5                     l739:
   927                           
   928                           ;../Slavetry.X/ADC.c: 6:     ADCON0 = p_ang;
   929     00B5  0873               	movf	ADC_Init@p_ang,w
   930     00B6  1283               	bcf	3,5	;RP0=0, select bank0
   931     00B7  1303               	bcf	3,6	;RP1=0, select bank0
   932     00B8  009F               	movwf	31	;volatile
   933     00B9                     l69:
   934     00B9  0008               	return
   935     00BA                     __end_of_ADC_Init:
   936                           
   937                           	psect	text5
   938     005D                     __ptext5:	
   939 ;; *************** function _isr *****************
   940 ;; Defined at:
   941 ;;		line 52 in file "slaver2.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          2       0       0       0       0
   958 ;;      Totals:         2       0       0       0       0
   959 ;;Total ram usage:        2 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 2
   962 ;; This function calls:
   963 ;;		_spiRead
   964 ;;		_spiWrite
   965 ;; This function is called by:
   966 ;;		Interrupt level 1
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970     005D                     _isr:	
   971                           ;psect for function _isr
   972                           
   973     005D                     i1l761:
   974                           
   975                           ;slaver2.c: 53:    if(SSPIF == 1){
   976     005D  1283               	bcf	3,5	;RP0=0, select bank0
   977     005E  1303               	bcf	3,6	;RP1=0, select bank0
   978     005F  1D8C               	btfss	12,3	;volatile
   979     0060  2862               	goto	u6_21
   980     0061  2863               	goto	u6_20
   981     0062                     u6_21:
   982     0062  2877               	goto	i1l47
   983     0063                     u6_20:
   984     0063                     i1l763:
   985                           
   986                           ;slaver2.c: 54:         temporal = spiRead();
   987     0063  120A  118A  20BA  120A  118A  	fcall	_spiRead
   988     0068  00F8               	movwf	_temporal
   989     0069                     i1l765:
   990                           
   991                           ;slaver2.c: 55:         if (temporal == 1) {
   992     0069  0378               	decf	_temporal,w
   993     006A  1D03               	btfss	3,2
   994     006B  286D               	goto	u7_21
   995     006C  286E               	goto	u7_20
   996     006D                     u7_21:
   997     006D  2877               	goto	i1l47
   998     006E                     u7_20:
   999     006E                     i1l767:
  1000                           
  1001                           ;slaver2.c: 56:         spiWrite(dato_adc);
  1002     006E  0879               	movf	_dato_adc,w
  1003     006F  120A  118A  20CA  120A  118A  	fcall	_spiWrite
  1004     0074                     i1l769:
  1005                           
  1006                           ;slaver2.c: 57:         SSPIF = 0;
  1007     0074  1283               	bcf	3,5	;RP0=0, select bank0
  1008     0075  1303               	bcf	3,6	;RP1=0, select bank0
  1009     0076  118C               	bcf	12,3	;volatile
  1010     0077                     i1l47:
  1011     0077  0872               	movf	??_isr+1,w
  1012     0078  008A               	movwf	10
  1013     0079  0E71               	swapf	??_isr,w
  1014     007A  0083               	movwf	3
  1015     007B  0EFE               	swapf	btemp,f
  1016     007C  0E7E               	swapf	btemp,w
  1017     007D  0009               	retfie
  1018     007E                     __end_of_isr:
  1019                           
  1020                           	psect	intentry
  1021     0004                     __pintentry:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1024                           
  1025     0004                     interrupt_function:
  1026     007E                     saved_w	set	btemp
  1027     0004  00FE               	movwf	btemp
  1028     0005  0E03               	swapf	3,w
  1029     0006  00F1               	movwf	??_isr
  1030     0007  080A               	movf	10,w
  1031     0008  00F2               	movwf	??_isr+1
  1032     0009  120A  118A  285D   	ljmp	_isr
  1033                           
  1034                           	psect	text6
  1035     00CA                     __ptext6:	
  1036 ;; *************** function _spiWrite *****************
  1037 ;; Defined at:
  1038 ;;		line 34 in file "../Slavetry.X/spi.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  dat             1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  dat             1    0[COMMON] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_isr
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     00CA                     _spiWrite:	
  1066                           ;psect for function _spiWrite
  1067                           
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _spiWrite: [wreg]
  1071                           ;spiWrite@dat stored from wreg
  1072     00CA  00F0               	movwf	spiWrite@dat
  1073     00CB                     i1l721:
  1074                           
  1075                           ;../Slavetry.X/spi.c: 34: void spiWrite(char dat);../Slavetry.X/spi.c: 35: {;../Slavetry
      +                          .X/spi.c: 36:     SSPBUF = dat;
  1076     00CB  0870               	movf	spiWrite@dat,w
  1077     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1078     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1079     00CE  0093               	movwf	19	;volatile
  1080     00CF                     i1l103:
  1081     00CF  0008               	return
  1082     00D0                     __end_of_spiWrite:
  1083                           
  1084                           	psect	text7
  1085     00BA                     __ptext7:	
  1086 ;; *************** function _spiRead *****************
  1087 ;; Defined at:
  1088 ;;		line 47 in file "../Slavetry.X/spi.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      unsigned char 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, pclath, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		_spiReceiveWait
  1111 ;; This function is called by:
  1112 ;;		_isr
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116     00BA                     _spiRead:	
  1117                           ;psect for function _spiRead
  1118                           
  1119     00BA                     i1l715:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1122                           
  1123                           
  1124                           ;../Slavetry.X/spi.c: 49:     spiReceiveWait();
  1125     00BA  120A  118A  20C3  120A  118A  	fcall	_spiReceiveWait
  1126     00BF                     i1l717:
  1127                           
  1128                           ;../Slavetry.X/spi.c: 50:     return(SSPBUF);
  1129     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1130     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1131     00C1  0813               	movf	19,w	;volatile
  1132     00C2                     i1l111:
  1133     00C2  0008               	return
  1134     00C3                     __end_of_spiRead:
  1135                           
  1136                           	psect	text8
  1137     00C3                     __ptext8:	
  1138 ;; *************** function _spiReceiveWait *****************
  1139 ;; Defined at:
  1140 ;;		line 29 in file "../Slavetry.X/spi.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		None
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_spiRead
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167     00C3                     _spiReceiveWait:	
  1168                           ;psect for function _spiReceiveWait
  1169                           
  1170     00C3                     i1l713:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _spiReceiveWait: []
  1173                           
  1174     00C3                     i1l97:	
  1175                           ;../Slavetry.X/spi.c: 31:     while ( !SSPSTATbits.BF );
  1176                           
  1177     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1178     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1179     00C5  1C14               	btfss	20,0	;volatile
  1180     00C6  28C8               	goto	u2_21
  1181     00C7  28C9               	goto	u2_20
  1182     00C8                     u2_21:
  1183     00C8  28C3               	goto	i1l97
  1184     00C9                     u2_20:
  1185     00C9                     i1l100:
  1186     00C9  0008               	return
  1187     00CA                     __end_of_spiReceiveWait:
  1188     007E                     btemp	set	126	;btemp
  1189     007E                     wtemp0	set	126
  1190                           
  1191                           	psect	idloc
  1192                           
  1193                           ;Config register IDLOC0 @ 0x2000
  1194                           ;	unspecified, using default values
  1195     2000                     	org	8192
  1196     2000  3FFF               	dw	16383
  1197                           
  1198                           ;Config register IDLOC1 @ 0x2001
  1199                           ;	unspecified, using default values
  1200     2001                     	org	8193
  1201     2001  3FFF               	dw	16383
  1202                           
  1203                           ;Config register IDLOC2 @ 0x2002
  1204                           ;	unspecified, using default values
  1205     2002                     	org	8194
  1206     2002  3FFF               	dw	16383
  1207                           
  1208                           ;Config register IDLOC3 @ 0x2003
  1209                           ;	unspecified, using default values
  1210     2003                     	org	8195
  1211     2003  3FFF               	dw	16383
  1212                           
  1213                           	psect	config
  1214                           
  1215                           ;Config register CONFIG1 @ 0x2007
  1216                           ;	Oscillator Selection bits
  1217                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1218                           ;	Watchdog Timer Enable bit
  1219                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1220                           ;	Power-up Timer Enable bit
  1221                           ;	PWRTE = OFF, PWRT disabled
  1222                           ;	RE3/MCLR pin function select bit
  1223                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1224                           ;	Code Protection bit
  1225                           ;	CP = OFF, Program memory code protection is disabled
  1226                           ;	Data Code Protection bit
  1227                           ;	CPD = OFF, Data memory code protection is disabled
  1228                           ;	Brown Out Reset Selection bits
  1229                           ;	BOREN = OFF, BOR disabled
  1230                           ;	Internal External Switchover bit
  1231                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1232                           ;	Fail-Safe Clock Monitor Enabled bit
  1233                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1234                           ;	Low Voltage Programming Enable bit
  1235                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1236                           ;	In-Circuit Debugger Mode bit
  1237                           ;	DEBUG = 0x1, unprogramme  1238     2007                     	org	8199
  1239     2007  20D4               	dw	8404
  1240                           
  1241                           ;Config register CONFIG2 @ 0x2008
  1242                           ;	Brown-out Reset Selection bit
  1243                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1244                           ;	Flash Program Memory Self Write Enable bits
  1245                           ;	WRT = OFF, Write protection off
  1246     2008                     	org	8200
  1247     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     419
                                              0 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Feb 07 02:37:25 2023

            _SSPSTATbits 0094                       l52 0047                       l73 003B  
                     l58 009A                       l75 0030                       l69 00B9  
                     l93 00AB                       l94 00B0                       u80 00A3  
                     u81 00A2                       u90 001C                       u91 001B  
                    l801 0090                      l803 0091                      l821 0034  
                    l813 001F                      l805 0016                      l815 0023  
                    l807 001C                      l831 004F                      l737 00B2  
                    l817 002E                      l739 00B5                      l819 002F  
                    l781 009C                      l829 003C                      l783 00A3  
                    l791 007E                      l785 00A5                      l793 008A  
                    l787 00A7                      l795 008B                      l789 00AA  
                    l797 008C                      l799 008D                      u110 0034  
                    u111 0033                      u105 0026                      u127 0055  
                    _isr 005D                     ?_isr 0070                     i1l47 0077  
                   i1l97 00C3                     u2_20 00C9                     u2_21 00C8  
                   u6_20 0063                     u6_21 0062                     u7_20 006E  
                   u7_21 006D                     _main 003C                     btemp 007E  
       __end_of_ADC_Init 00BA         __end_of_ADC_Read 003C                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l100 00C9                    i1l111 00C2                    i1l103 00CF  
                  i1l713 00C3                    i1l721 00CB                    i1l715 00BA  
                  i1l717 00BF                    i1l761 005D                    i1l763 0063  
                  i1l765 0069                    i1l767 006E                    i1l769 0074  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 007E  
                  pclath 000A          __end_of_spiInit 00B1          __end_of_spiRead 00C3  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005D                   ??_main 0020                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                ?_ADC_Init 0070  
              ?_ADC_Read 0073                   saved_w 007E         __end_of_spiWrite 00D0  
              ??_spiInit 0076                ??_spiRead 0070  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 009B               ??_ADC_Init 0073  
             ??_ADC_Read 0075                  ??_setup 0077               __pmaintext 003C  
             __pintentry 0004               ADC_Read@ch 0077                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 007E                  __ptext2 009B  
                __ptext3 0015                  __ptext4 00B1                  __ptext5 005D  
                __ptext6 00CA                  __ptext7 00BA                  __ptext8 00C3  
                _spiInit 009B                  _spiRead 00BA     end_of_initialization 0011  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00C3      start_initialization 000F              __end_of_isr 007E  
 __end_of_spiReceiveWait 00CA              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070                 _ADC_Init 00B1  
               _ADC_Read 0015                 ?_spiInit 0073                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
          ADC_Init@p_ang 0073                 _dato_adc 0079                 _temporal 0078  
               _spiWrite 00CA             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
